/*
 * credofasterpartnerapi_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package models_pkg


import "github.com/satori/go.uuid"

/*
 * Structure for the custom type PartnerAirtimeRequest
 */
type PartnerAirtimeRequest struct {
    Initiator       Initiator       `json:"initiator" form:"initiator"` //TODO: Write general description for this field
    Parameters      []*SingleAirtimeParameter `json:"parameters" form:"parameters"` //TODO: Write general description for this field
}

/*
 * Structure for the custom type SingleAirtimeParameter
 */
type SingleAirtimeParameter struct {
    ReferenceId     uuid.UUID       `json:"reference_id" form:"reference_id"` //A UUID for Each
    Country         string          `json:"country" form:"country"` //Which Country are you requesting in
    AccountNo       string          `json:"account_no" form:"account_no"` //The Receipient's Account. Can be Phone Number(International Format)
    Denomination    Denomination    `json:"denomination" form:"denomination"` //Currency Declarative Type
    Other           interface{}     `json:"other" form:"other"` //Any Other Tags to accompany the Request
}

/*
 * Structure for the custom type Initiator
 */
type Initiator struct {
    Type            string          `json:"type" form:"type"` //Client Type Initiating the Request
    Id              string          `json:"id" form:"id"` //Client ID Initiating the Request
}

/*
 * Structure for the custom type Denomination
 */
type Denomination struct {
    Name            string          `json:"name" form:"name"` //Available Name: KE
    Value           int64           `json:"value" form:"value"` //Amount to Request
}

/*
 * Structure for the custom type PartnerAirtimeResponse
 */
type PartnerAirtimeResponse struct {
    ErrorCode        int64           `json:"ErrorCode" form:"ErrorCode"` //Code for the Request API Generated. 0: Success, Any other Error Code, refer to ErrorCodes Page
    ErrorDescription string          `json:"ErrorDescription" form:"ErrorDescription"` //Text Description
    ReferenceId      uuid.UUID       `json:"ReferenceId" form:"ReferenceId"` //a UUID Returned for the Transaction
    RequestId        uuid.UUID       `json:"RequestId" form:"RequestId"` //Return of the Clients Request ID
}

/*
 * Structure for the custom type PartnerAirtimeBalanceResponse
 */
type PartnerAirtimeBalanceResponse struct {
    ErrorCode        int64           `json:"ErrorCode" form:"ErrorCode"` //Code for the Request API Generated. 0: Success, Any other Error Code, refer to ErrorCodes Page
    ErrorDescription string          `json:"ErrorDescription" form:"ErrorDescription"` //Text Description
    UnitBalance      int64           `json:"UnitBalance" form:"UnitBalance"` //Remaining Tentative Balance
    Limit            int64           `json:"Limit" form:"Limit"` //Limit of Units to Use.
}

/*
 * Structure for the custom type RegisterCallbackRequest
 */
type RegisterCallbackRequest struct {
    Url             string          `json:"url" form:"url"` //Define a reachable URL that accepts a JSON Payload as described below
    Tps             *string         `json:"tps,omitempty" form:"tps,omitempty"` //Define the transactions per second we should use when pushing callbacks to your side
    Retries         *string         `json:"retries,omitempty" form:"retries,omitempty"` //A comma separated value, containing the number of seconds to wait for any retries and the max number of retries to do, when the clients endpoint responds with an Error
}

/*
 * Structure for the custom type EventCallbackPayload
 */
type EventCallbackPayload struct {
    EventId         string          `json:"EventId" form:"EventId"` //This is shared by the system and should be referred when doing any debugging
    EventType       string          `json:"EventType" form:"EventType"` //Contains the EVENT type.  detailed list of this can be shared on Request to the admin
    RequestId       *string         `json:"RequestId,omitempty" form:"RequestId,omitempty"` //For Events that are related with the Clients Request, you will get a Request ID that was generate by the system when you made a  service call
    EventData       interface{}     `json:"EventData" form:"EventData"` //Contains any addition fields,(CAN BE NESTED). See the PDF for more details
}

/*
 * Structure for the custom type RegisterCallbackResponse
 */
type RegisterCallbackResponse struct {
    ErrorCode             int64           `json:"ErrorCode" form:"ErrorCode"` //TODO: Write general description for this field
    ErrorDescription      string          `json:"ErrorDescription" form:"ErrorDescription"` //TODO: Write general description for this field
    RegisteredCallbackUrl string          `json:"RegisteredCallbackUrl" form:"RegisteredCallbackUrl"` //TODO: Write general description for this field
    RequestId             uuid.UUID       `json:"RequestId" form:"RequestId"` //Tracking RequestId
}

/*
 * Structure for the custom type EventCallbackFeedback
 */
type EventCallbackFeedback struct {
    ErrorCode        int64           `json:"ErrorCode" form:"ErrorCode"` //TODO: Write general description for this field
    ErrorDescription string          `json:"ErrorDescription" form:"ErrorDescription"` //TODO: Write general description for this field
}
